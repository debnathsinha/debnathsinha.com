---
layout: post
title: Setup
tags : [setup]
post-date : 29 Oct 2008
loc  : San Francisco
---

One of the biggest pain points I have with blogging is that its chronological. Which implies that people tend not to go back and edit their posts. This always struck me as odd, because I find myself changing my views on certain subjects or updating them with newer sources of information. It's not that posts cannot be edited afterwards, its probably more of a culture issue. For whatever reason, I tried my hand at Blogger etc, but it never really caught on. 
For a couple of years now, I have my <a href="http://www.debnathsinha.com"> domain </a> running on a AWS EC2 micro instance, in part because Amazon was giving a free year as an introductory offer. The year has since ended, and I've been meaning to look for cheaper alternatives. It currently costs $14 per month to rent a micro-instance, but most of the content is static anyways. One day I found myself reading <a href="http://www.allthingsdistributed.com">Werner Vogels</a> webpage in which he spoke about how he had migrated his blog to S3 and was using <a href="https://github.com/mojombo/jekyll">Jekyll</a> to generate it. Digging further into it, I found that Jekyll had been designed by the <a href="http://www.github.com">Github</a> guys, and since that's a company I like I decided to check out the product. What I liked about the produce was that it allowed me to put the posts into a github repository. This appealed to me since it meant that like any source control system, I could go back and revise the source...in this case the posts. At the same time, the tool seemed to separate out really well the blog generation aspect from the content of the blog.
I reverse engineered <a href="http://www.allthingsdistributed.com">Werner's</a> and <a href="http://tom.preston-werner.com/">Tom's</a> webpage, since they were both using Jekyll, found the parts I liked and created my own web page. That is where I learnt about <a href="http://www.disqus.com">Disqus</a> which seems to have commenting aspect of a webpage nailed down flat. Also, it is where I got ideas on how to layout. One of the issues with using Jekyll is that you have to write the CSS, templates yourself and that takes some non-trivial work. While the structure of the website can be easy to program using Jekyll, the CSS is a whole another beast. A really useful resource in that regard was <a href="http://www.amazon.com/CSS-Missing-David-Sawyer-McFarland/dp/0596802447"> CSS: The Missing Manual</a>. If you find yourself designing non-trivial webpages, I would highly recommend that book. It has a really good explanation of how to use CSS to get the layouts and effects that you want with examples. And it saves a lot of time not having to Google various CSS hacks because CSS hacks tend not to be very Google-firendly IMHO.
Finally this website is deployed on Amazon S3, which works out cheaper for static webpages since I pay per I/O and do not need to have a whole webserver running. There is a option on an S3 bucket to make it a website. <span class="important">IMPORTANT: The name of the bucket should be the domain name of the website, my bucket name is www.debnathsinha.com.</span> And you will need to go to GoDaddy or your domain name provider and forward www.debnathsinha.com to s3-website-<region>.amazonaws.com. Finally, use <a href="http://s3tools.org/s3cmd">s3cmd</a> to push the blog from your development machine.
Its non-trivial to set this whole infrastructure up, took me close to 3 days. But once its up, its very smooth sailing to keep updating entries, and most of the time went in getting the deign of the website the way I wanted it, and that knowledge is useful to a web frontend developer, one of my roles @salesforce!


